<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>汇编实验报告</title>
      <link href="/2024/06/23/%E6%B1%87%E7%BC%96%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
      <url>/2024/06/23/%E6%B1%87%E7%BC%96%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/</url>
      
        <content type="html"><![CDATA[<h2 id="汇编实验报告"><a href="#汇编实验报告" class="headerlink" title="汇编实验报告"></a>汇编实验报告</h2><h3 id="question1-查找匹配字符串"><a href="#question1-查找匹配字符串" class="headerlink" title="question1: 查找匹配字符串"></a>question1: 查找匹配字符串</h3><h4 id="1-设计说明："><a href="#1-设计说明：" class="headerlink" title="1.设计说明："></a>1.设计说明：</h4><h6 id="下面是比较过程中寄存器的使用："><a href="#下面是比较过程中寄存器的使用：" class="headerlink" title="下面是比较过程中寄存器的使用："></a>下面是比较过程中寄存器的使用：</h6><ul><li>si：存放原串首地址</li><li>di：存放目的串首地址</li><li>cl：关键字长度 (keyword长度)</li><li>ax：目标串(sentence)的偏移量</li></ul><h6 id="子程序说明"><a href="#子程序说明" class="headerlink" title="子程序说明:"></a>子程序说明:</h6><p>part_1：输入Sentence并判断</p><p>part_2：进行字符串比较，内循环</p><p>part_3：改变进行比对的字符串区间，外循环，BX++,清空si，di继续内循环比较</p><p>part_4：match,进行计算位置，进制转换以及输出结果</p><p>part_5：显示not match</p><h6 id="程序流程："><a href="#程序流程：" class="headerlink" title="程序流程："></a>程序流程：</h6><ol><li>输入关键字和一个句子，分别存入相应的缓冲区。</li><li>在句子中查找关键字。</li></ol><p>​关键字和句子中相应字段的比较可以使用串比较指令，附加段和数据段定义为同一段，以便串指令的使用。<br>下面是比较过程中寄存器的使用：</p><ul><li>每调用一次串比较指令，都有3个分支：<ul><li>匹配成功，转入match</li><li>未匹配但还未越界，则继续比较 ax+1</li><li>已经越界，转入No match</li></ul></li></ul><h4 id="2-调试说明："><a href="#2-调试说明：" class="headerlink" title="2.调试说明："></a>2.调试说明：</h4><p><img src="/image/imagehb1.png" alt="alt text"></p><p>调试中遇到的问题：</p><ol><li><p>由于每次执行内循环都需要将CX的值变成keyword的长度，因此曾考虑在datasg初始化一个空间进行存储。但后来发现每次pop </p><p>cx后，在push cx，cx的值就会再次存入栈中，即可实现cx的动态保存。</p></li><li><p>程序编写完成后开始运行，发现怎么都匹配不到keyword，后来通过debug调试，发现内循环结束的边界次数比keyword长，导致每次匹配都不能正常跳出循环，而出现了每次匹配都匹配不到的问题，经过修改内循环的程序代码，最终成功执行。</p></li></ol><h4 id="3-程序框图："><a href="#3-程序框图：" class="headerlink" title="3.程序框图："></a>3.程序框图：</h4><p><img src="/image/imagehb2.png" alt="alt text"></p><h4 id="4-程序清单："><a href="#4-程序清单：" class="headerlink" title="4.程序清单："></a>4.程序清单：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line">DATAS SEGMENT</span><br><span class="line">    ;此处输入数据段代码</span><br><span class="line">    mess1 DB &#x27;Enter keyword:&#x27;,&#x27;$&#x27;</span><br><span class="line">    mess2 DB &#x27;Enter Sentence:&#x27;,&#x27;$&#x27;</span><br><span class="line">    mess3 DB &#x27;Match at location:&#x27;,&#x27;$&#x27;</span><br><span class="line">    mess4 DB &#x27;NOT MATCH.&#x27;,13,10,&#x27;$&#x27;</span><br><span class="line">    mess5 DB &#x27;H if the sentence&#x27;,13,10,&#x27;$&#x27;</span><br><span class="line">    change DB 13,10,&#x27;$&#x27;</span><br><span class="line">    Key_Word label byte</span><br><span class="line">    max1 db 210                ;关键字最大长度</span><br><span class="line">    act1 db ?                  ;具体关键字keyword长度</span><br><span class="line">    Kword db 10 dup(?)         ;存放关键字字符串</span><br><span class="line">    Sentence label byte</span><br><span class="line">    max2 db 250                ;字符串最大长度</span><br><span class="line">    act2 db ?                  ;具体输入的sentence长度</span><br><span class="line">    Stence db 50 dup(?)        ;存放具体字符串</span><br><span class="line">DATAS ENDS</span><br><span class="line">STACKS SEGMENT</span><br><span class="line">STACKS ENDS</span><br><span class="line">CODES SEGMENT</span><br><span class="line">    ASSUME CS:CODES,DS:DATAS,SS:STACKS</span><br><span class="line">;.................................................................................    </span><br><span class="line">START:                          ;#### 程序开始输入keyword</span><br><span class="line">    MOV AX,DATAS</span><br><span class="line">    MOV DS,AX                           ;程序开始时指向数据段</span><br><span class="line">    </span><br><span class="line">    LEA DX,mess1                        ;将mess放入段寄存器</span><br><span class="line">    MOV ah,09</span><br><span class="line">    INT 21h                             ;输出Enter keyword</span><br><span class="line">    LEA DX,Key_Word</span><br><span class="line">    MOV ah,0ah                          ;用21号中段的0ah号功能获取关键字</span><br><span class="line">    INT 21h</span><br><span class="line">    cmp act1,0                          ;进行比较？</span><br><span class="line">    je exit                             ;如果为空直接退出程序</span><br><span class="line">;..................................................................................</span><br><span class="line">part_1:                         ;#### 输入Sentence并判断</span><br><span class="line">    LEA DX,change</span><br><span class="line">    MOV ah,09</span><br><span class="line">    INT 21h                     ;输出回程，换行</span><br><span class="line">    LEA DX,mess2                ;输出Enter Sentence</span><br><span class="line">    MOV ah,09                   ;中断调用输出字符串</span><br><span class="line">    INT 21h</span><br><span class="line">    LEA DX,Sentence             ;接收字符串</span><br><span class="line">    MOV ah,0ah</span><br><span class="line">    INT 21h</span><br><span class="line">                                ;用21号的0ah号功能获取句子</span><br><span class="line">    MOV AL,act1</span><br><span class="line">    CBW</span><br><span class="line">    MOV CX,AX</span><br><span class="line">                                             ;保存关键字长度到cx</span><br><span class="line">    PUSH CX</span><br><span class="line">                                             ;cx入栈</span><br><span class="line">    MOV AL,act2</span><br><span class="line">    cmp AL,0</span><br><span class="line">    je part_5</span><br><span class="line">                                             ;保存句子长度到al，若句子为空则跳转显示not match</span><br><span class="line">    SUB AL,act1</span><br><span class="line">    js part_5                                ;若句子长度小于关键字长度，则跳转显示not match</span><br><span class="line">    INC AL</span><br><span class="line">    CBW                                      ;扩展数据，8-&gt;16</span><br><span class="line">    LEA BX,Sentence                          ;将句子的首地址放进BX</span><br><span class="line">    MOV DI,0</span><br><span class="line">    MOV SI,0 </span><br><span class="line">;...................................................................................</span><br><span class="line">part_2:                         ;#### 比较，内循环 </span><br><span class="line">    MOV AH,[BX+DI]</span><br><span class="line">    CMP AH,Kword[SI]            ;两字符ASCII码进行比较</span><br><span class="line">    jne part_3                  ;遇见字符不相等就跳转到part_3</span><br><span class="line">    INC DI</span><br><span class="line">    INC SI</span><br><span class="line">    DEC CX                      ;每遇到一个相等的字符,cx=cx-1,</span><br><span class="line">                                ;若cx不为0则比较下一个字符,当cx为0是说明关键字比较完</span><br><span class="line">    CMP CX,0</span><br><span class="line">    je part_4                   ;比较完了</span><br><span class="line">    jmp part_2                  ;未比较完</span><br><span class="line">;....................................................................................</span><br><span class="line">part_3:                         ;#### 外循环，BX+1,清空si，di继续内循环比较</span><br><span class="line">        INC BX                  ;从Sentence下一位开始比较</span><br><span class="line">        DEC AL                  ;句子长度自减，确定跳转No Match的边界</span><br><span class="line">        cmp AL,0</span><br><span class="line">        je part_5               ;相等直接no match</span><br><span class="line">        MOV DI,0                ;两个计数器置零</span><br><span class="line">        MOV SI,0</span><br><span class="line">        POP CX</span><br><span class="line">        push CX                 ;再次存入CX</span><br><span class="line">        jmp part_2</span><br><span class="line">;......................................................................................</span><br><span class="line">part_4:                           ;#### match,将bx减去句子的首地址加一得到关键字所在位置，</span><br><span class="line">        SUB BX,offset Stence                    ;找到位置后调用二进制转十六进制子函数将位置输出</span><br><span class="line">        INC BX</span><br><span class="line">        LEA DX,change                           ;输出换行字符</span><br><span class="line">        MOV ah,09</span><br><span class="line">        INT 21h</span><br><span class="line">        LEA DX,mess3                            ;输出Match at location</span><br><span class="line">        MOV ah,09</span><br><span class="line">        INT 21h</span><br><span class="line">        CALL btoh                               ;二进制转十六进制字符输出</span><br><span class="line">        LEA DX,mess5</span><br><span class="line">        MOV ah,09</span><br><span class="line">        INT 21h</span><br><span class="line">        jmp part_1</span><br><span class="line">        </span><br><span class="line">        ;二进制转换十六进制</span><br><span class="line">        btoh PROC NEAR</span><br><span class="line">        MOV CH,4                 ;十六位寄存器，四个十六进制数，外循环4次</span><br><span class="line">        rotate: MOV CL,4         ;每次输出一位十六进制数内循环4次</span><br><span class="line">        ROL BX,CL</span><br><span class="line">        MOV AL,BL</span><br><span class="line">        and AL,0fh               ;高四位清零</span><br><span class="line">        add AL,30h               ;转ASCII码</span><br><span class="line">        cmp al,3ah               ;跟10的ASCII码对比，大就是字母，小就是数字</span><br><span class="line">        jl printit               ;数字就输出</span><br><span class="line">        add al,7h                ;字母加7后也变ASCII码，输出</span><br><span class="line">        printit:</span><br><span class="line">        MOV dl,al</span><br><span class="line">        MOV ah,2                 ;中断调用输出字符</span><br><span class="line">        int 21h</span><br><span class="line">        dec ch                   ;继续循环输出所有数字</span><br><span class="line">        jnz rotate</span><br><span class="line">        ret</span><br><span class="line">btoh endp</span><br><span class="line">;.........................................................................................</span><br><span class="line">part_5: </span><br><span class="line"></span><br><span class="line">        ;显示not match</span><br><span class="line">        LEA DX,change</span><br><span class="line">        MOV ah,09</span><br><span class="line">        INT 21h</span><br><span class="line">        LEA DX,mess4</span><br><span class="line">        </span><br><span class="line">        MOV ah,09</span><br><span class="line">        INT 21h</span><br><span class="line">        jmp part_1</span><br><span class="line">exit:</span><br><span class="line">        ret</span><br><span class="line">CODES ENDS</span><br><span class="line">    END START</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="question2-查询电话号码"><a href="#question2-查询电话号码" class="headerlink" title="question2: 查询电话号码"></a>question2: 查询电话号码</h3><h4 id="1-设计说明：-1"><a href="#1-设计说明：-1" class="headerlink" title="1.设计说明："></a>1.设计说明：</h4><h6 id="寄存器使用说明："><a href="#寄存器使用说明：" class="headerlink" title="寄存器使用说明："></a>寄存器使用说明：</h6><ul><li>si：临时表项字符地址</li><li>di：电话簿字符地址</li><li>cl：存储name长度</li><li>ax：存放电话簿表项个数</li></ul><h6 id="子程序说明："><a href="#子程序说明：" class="headerlink" title="子程序说明："></a>子程序说明：</h6><p>clear：清空寄存器</p><p>clrf：换行子程序</p><p>printline：换行子程序</p><p>name_search：查询程序</p><p>name_sort：name排序程序</p><p>insert：插入程序</p><p>input_name：输入name</p><p>stor_name：存储name</p><p>inphone：输入并存储phone</p><h6 id="程序流程说明："><a href="#程序流程说明：" class="headerlink" title="程序流程说明："></a>程序流程说明：</h6><ul><li><p>首先进入创建电话簿环节</p><ul><li><p>输入name，判断是否有输入，无输入则跳转查询选择阶段，有输入则存入临时表项，再循环mov到es：di</p></li><li><p>输入phone(电话号码)，存入临时表项，再循环搬运到es：di</p></li><li><p>之后对name进行插入排序，</p><ul><li>如果tel_nam是空的，直接插入</li><li>否则设定si是待插入name地址，di是电话簿地址，将si与di循环比较，si&lt;di时比较结束</li><li>找到插入位置，然后从最后一个表项开始前面的一个表项复制到后面的表项</li><li>到达插入位置后，将临时表项(temp_tab)中的内容复制到对应位置</li><li>完成单次排序</li></ul></li></ul></li><li><p>当name无输入时，跳转查询选择环节，输入y则进行查询，否则退出</p></li><li><p>选择y进入查询阶段后，输入需要查询的字符串</p><ul><li>将输入的name循环mov到临时表项里，找到电话簿tel_nam地址</li><li>si是临时表项地址，di是电话簿元素地址</li><li>遍历并进行串比较，查找到时，通过cx的循环次数求出目标地址</li><li>比对不一样就di+35(35是tel_nam一个单元的长度)，继续比对</li><li>未找到就输出”no match ! “</li></ul></li></ul><h4 id="2-调试说明：-1"><a href="#2-调试说明：-1" class="headerlink" title="2.调试说明："></a>2.调试说明：</h4><p><img src="/image/imagehb3.png" alt="alt text"></p><h4 id="3-程序框图：-1"><a href="#3-程序框图：-1" class="headerlink" title="3.程序框图："></a>3.程序框图：</h4><p><img src="/image/imagehb-2.png" alt="alt text"></p><p><img src="/image/imagehb-3.png" alt="alt text"></p><h4 id="4-程序清单：-1"><a href="#4-程序清单：-1" class="headerlink" title="4.程序清单："></a>4.程序清单：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br></pre></td><td class="code"><pre><span class="line">;PROGRAM TITLE GOES HERE--PHONE</span><br><span class="line">assume cs:prognam,ds:datarea,es:datarea</span><br><span class="line">datarea segment</span><br><span class="line">message1 db &#x27;Input name:&#x27;,&#x27;$&#x27;</span><br><span class="line">message2 db &#x27;Input a telephone number:&#x27;,&#x27;$&#x27;</span><br><span class="line">message3 db &#x27;Do you want a telephone number?(Y/N)&#x27;,&#x27;$&#x27;</span><br><span class="line">message4 db &#x27;name?&#x27;,0ah,0dh,&#x27;$&#x27; </span><br><span class="line">message5 db &#x27;name&#x27;,19 dup(0),&#x27;tel.&#x27;,0ah,0dh,&#x27;$&#x27;</span><br><span class="line">message6 db &#x27;Not find!&#x27;,0ah,0dh,&#x27;$&#x27;</span><br><span class="line">num dw 0                             ;用来标识电话表中数据个数</span><br><span class="line">phonein label byte</span><br><span class="line">    pmax db 11                       ;存储电话的最长位数</span><br><span class="line">    pact db ?                        ;具体的电话号码长度</span><br><span class="line">    phone db 11 dup(?)               ;具体的phone</span><br><span class="line">namein label byte</span><br><span class="line">    nmax db 20                       ;存储name的最大字符数</span><br><span class="line">    nact db ?                        ;存储具体的name长度</span><br><span class="line">    nam db 20 dup(?)                 ;具体的name</span><br><span class="line"></span><br><span class="line">temp_nam db 20 dup(?)                ;临时存放表项</span><br><span class="line">temp_tab db 20 dup(?),4 dup(?),8 dup(?),13,10,&#x27;$&#x27;</span><br><span class="line">                            ;排序用，临时储存tel_tab中一项</span><br><span class="line">tel_tab db 50 dup(20 dup(?),4 dup(?),8 dup(?),13,10,&#x27;$&#x27;)</span><br><span class="line">                            ;每一项35（20+8+4+3）字节</span><br><span class="line">datarea ends</span><br><span class="line">;........................................................................................</span><br><span class="line">prognam segment              ;代码段code segment</span><br><span class="line">start:</span><br><span class="line">main proc far                ;主函数</span><br><span class="line">    push ds</span><br><span class="line">    xor ax,ax                ;置零</span><br><span class="line">    push ax</span><br><span class="line">    mov ax,datarea           ;指向数据段</span><br><span class="line">    mov ds,ax</span><br><span class="line">    mov es,ax</span><br><span class="line">;.........................................................................................</span><br><span class="line">begin:                                            ;#### 数据输入阶段</span><br><span class="line">    lea dx,message1                ;输出提示输入名字</span><br><span class="line">    mov ah,09h                     ;中断调用输入字符串</span><br><span class="line">    int 21h</span><br><span class="line">    call clear                     ;清空临时单元temp_nam和tel_tab中的内容；</span><br><span class="line">    call input_name                ;调用input_name</span><br><span class="line">    cmp nact,0</span><br><span class="line">    je search            ;如果没有输入名字，表明输入结束，开始查询</span><br><span class="line">    call stor_name       ;调用存储name程序</span><br><span class="line">    lea dx,message2      ;输出提示输入电话号码</span><br><span class="line">    mov ah,09h</span><br><span class="line">    int 21h</span><br><span class="line">    call inphone         ;输入电话号码后，调用inphone</span><br><span class="line">    call name_sort       ;进行姓名排序</span><br><span class="line">    jmp begin            ;循环输入</span><br><span class="line">;........................................................................................</span><br><span class="line">search:                                           ;#### 查询电话号码阶段</span><br><span class="line">    mov ah,09</span><br><span class="line">    lea dx,message3          ;提示是否进行查询</span><br><span class="line">    int 21h</span><br><span class="line">    mov ah,01h               ;键盘输入并回显</span><br><span class="line">    int 21h</span><br><span class="line">    cmp al,&#x27;N&#x27;               ;不查询直接退出</span><br><span class="line">    je exit</span><br><span class="line"></span><br><span class="line">    call crlf                           ;换行</span><br><span class="line">    mov ah,09</span><br><span class="line">    lea dx,message4                     ;提示输入名字进行查询</span><br><span class="line">    int 21h</span><br><span class="line">    call input_name                     ;输入name</span><br><span class="line">    cmp nact,0                          ;进行输入判断</span><br><span class="line">    je exit                             ;没输入就直接结束了</span><br><span class="line">    call name_search                    ;nema查询函数</span><br><span class="line">    call printline                      ;输出查询结果，没查到就返回。</span><br><span class="line">    jmp search                          ;再次跳回查询程序</span><br><span class="line">exit:</span><br><span class="line">    ret</span><br><span class="line">main endp                      ;主程序结束</span><br><span class="line">;......................................................................................</span><br><span class="line">                                                   ;#### 输入姓名</span><br><span class="line">input_name proc near           ;接收从键盘的输入名字，存储到存储单元namein</span><br><span class="line">    lea dx,namein              ;输进namein</span><br><span class="line">    mov ah,0ah                 ;终端调用输入</span><br><span class="line">    int 21h </span><br><span class="line">    call crlf                  ;调用crlf换行</span><br><span class="line">    ret</span><br><span class="line">input_name endp</span><br><span class="line">;......................................................................................</span><br><span class="line">                                         ;#### 存放姓名</span><br><span class="line">stor_name proc near                      ;从存储单元name的姓名存储到临时表项temp_tab</span><br><span class="line">    cmp nact,0                           ;判定输入的字符长度，没输入就返回</span><br><span class="line">    je exit1</span><br><span class="line">    lea si,nam                           ;将si指向nam(具体的name字符串)</span><br><span class="line">    lea di,temp_tab                      ;di指向临时存放单元</span><br><span class="line">    xor ch,ch                       ;ch清零</span><br><span class="line">    mov cl,nact                     ;nact是长度</span><br><span class="line">    cld                             ;df清零，si增加</span><br><span class="line">    rep movsb                       ;循环搬运到es：di</span><br><span class="line">exit1:</span><br><span class="line">    ret</span><br><span class="line">stor_name endp</span><br><span class="line">;......................................................................................</span><br><span class="line">                                                    ;#### 存放号码 </span><br><span class="line">inphone proc near              ;接收输入的号码，存到phonein和temp_tab;存储N,X,Y,Z</span><br><span class="line">    lea dx,phonein             ;输入</span><br><span class="line">    mov ah,0ah</span><br><span class="line">    int 21h</span><br><span class="line">    cmp pact,0                         ;判断是否输入号码</span><br><span class="line">    je exit2        </span><br><span class="line">    call crlf                          ;换行</span><br><span class="line">    lea si,phone                       ;phone地址</span><br><span class="line">    lea di,temp_tab                    ;temp_tab地址</span><br><span class="line">    add di,23                  </span><br><span class="line">    sub ch,ch                   ;ch清零</span><br><span class="line">    mov cl,pact                 ;将接收的字符数量放进cl</span><br><span class="line">    cld                         ;设置方向</span><br><span class="line">    rep movsb                   ;依次搬运temp----&gt;phone存储</span><br><span class="line">exit2:</span><br><span class="line">    ret</span><br><span class="line">inphone endp</span><br><span class="line">;.....................................................................................</span><br><span class="line">;1.根据名字进行排序，首先找到插入位置，然后从最后一个表项开始前面的一个表项复制</span><br><span class="line">到后面的表项--   --#### 姓名排序(插入排序)</span><br><span class="line">;2.到达插入位置后，将临时表项(temp_tab)中的内容复制到对应位置</span><br><span class="line">name_sort proc near            ;恢复N,X,Y,Z</span><br><span class="line">    cmp num,0</span><br><span class="line">    jnz sort                   ;表项中有内容，进入排序子程序</span><br><span class="line">    lea si,temp_tab            ;如果表项中没有内容，直接插入</span><br><span class="line">    lea di,tel_tab             ;di为电话簿地址</span><br><span class="line">    mov cx,35                  ;要传送的数据段长度</span><br><span class="line">    cld                        ;cld&lt;-------&gt;std，操作方向标志位DF, cld使DF复位，</span><br><span class="line">    即是让DF=0，std使DF置位，即DF=1</span><br><span class="line">    rep movsb                  ;循环传送</span><br><span class="line">    jmp exit3</span><br><span class="line">sort:</span><br><span class="line">    mov cx,num                                            ;cx=数据元素长度</span><br><span class="line">    lea si,temp_tab                                       ;si=tem_tab地址</span><br><span class="line">    lea di,tel_tab                                        ;di=tel_tab地址</span><br><span class="line">loopsort:</span><br><span class="line">    push di                    ;因为接下来比较di会变，将di入栈</span><br><span class="line">    push cx                    ;ci同理</span><br><span class="line">    mov cx,20                  ;temp一共20字节，所以只要比较20次</span><br><span class="line">    repz cmpsb                 ;repz cmpsb 如果ds:si和es:di所指向的字节相等则继续比较</span><br><span class="line">    ja move                    ;如果si&gt;di,则di跳转move，指向下一个表项，继续循环</span><br><span class="line">    pop cx</span><br><span class="line">    pop di</span><br><span class="line">    call insert                ;否则找到插入位置，调用插入子程序</span><br><span class="line">    jmp exit3</span><br><span class="line">move:</span><br><span class="line">    pop cx                                  ;继续循环，将cx和di pop出来</span><br><span class="line">    pop di</span><br><span class="line">    add di,35                               ;往下找一个</span><br><span class="line">    lea si,temp_tab</span><br><span class="line">    loop loopsort                           ;循环loopsort</span><br><span class="line">    mov cx,35                               ;正常退出循环，说明需要插入在最后</span><br><span class="line">    rep movsb</span><br><span class="line">exit3:</span><br><span class="line">    inc num                                 ;表项个数加1</span><br><span class="line">    ret</span><br><span class="line">name_sort endp                              ;此处，没有正确返回，因为push后没有pop出来</span><br><span class="line">;.....................................................................................</span><br><span class="line"></span><br><span class="line">;进入此子程序后，cx存储着需要移动的表项个数，从后往前进行复制（移动）</span><br><span class="line">insert proc near</span><br><span class="line">    mov ax,num                     ;num-cx+1是位置，cx是需要移动的表项个数</span><br><span class="line">loopinsert:</span><br><span class="line">    push ax</span><br><span class="line">    mov bx,35</span><br><span class="line">    mul bx                                      ;字节总数35*num</span><br><span class="line">    lea di,tel_tab                              ;取地址</span><br><span class="line">    add di,ax</span><br><span class="line">    mov si,di                                   ;di目前指向num*35</span><br><span class="line">    sub si,35                                   ;si目前指向num*(35-1)</span><br><span class="line">    push cx</span><br><span class="line">    mov cx,35</span><br><span class="line">    rep movsb</span><br><span class="line">    pop cx                     ;cx复原值</span><br><span class="line">    pop ax                     ;ax赋值为查找计数器</span><br><span class="line">    dec ax                     ;ax往后一格，继续循环找插入处</span><br><span class="line">    loop loopinsert</span><br><span class="line"></span><br><span class="line">    lea si,temp_tab                ;插入待插入位置</span><br><span class="line">    lea di,tel_tab</span><br><span class="line">    mov bx,35</span><br><span class="line">    mul bx                         ;得到插入的偏移地址</span><br><span class="line">    add di,ax                      ;数据依次传送</span><br><span class="line">    mov cx,35                      ;传送35次</span><br><span class="line">    rep movsb</span><br><span class="line">    ret</span><br><span class="line">insert endp</span><br><span class="line">;....................................................................................</span><br><span class="line">name_search proc near</span><br><span class="line">    call clear                                  ;清空临时单元temp_nam和tel_tab的内容；</span><br><span class="line">    mov ch,0</span><br><span class="line">    mov cl,nact                                 ;cl是名字长度</span><br><span class="line">    lea si,nam                                  ;si是具体name</span><br><span class="line">    lea di,temp_nam                             ;name--&gt;temp_nam</span><br><span class="line">    rep movsb                                   ;循环mov</span><br><span class="line">    mov cx,num                                  ;搜寻名字循环次数</span><br><span class="line">    lea di,tel_tab                       ;tel_tab地址</span><br><span class="line">    lea si,temp_nam                      ;temp_nam地址</span><br><span class="line">loopfind:</span><br><span class="line">    push di</span><br><span class="line">    push cx</span><br><span class="line">    mov ch,0</span><br><span class="line">    mov cl,20                </span><br><span class="line">    repz cmpsb               ;为0时重复串操作</span><br><span class="line">    je found                 ;找到，则num-cx为位置</span><br><span class="line">    pop cx</span><br><span class="line">    pop di</span><br><span class="line">    add di,35                ;没找到就di+35，找下一个</span><br><span class="line">    lea si,temp_nam</span><br><span class="line">    loop loopfind</span><br><span class="line">    mov cx,0                 ;没找到</span><br><span class="line">    jmp exit4</span><br><span class="line">found:</span><br><span class="line">    pop cx</span><br><span class="line">    pop di</span><br><span class="line">exit4:</span><br><span class="line">    ret</span><br><span class="line">name_search endp</span><br><span class="line">;......................................................................................</span><br><span class="line">printline proc near                  ;#### 输出查询结果</span><br><span class="line">    cmp cx,0</span><br><span class="line">    jnz next                         ;不等于就跳到next输出查询结果</span><br><span class="line">    mov ah,09h        </span><br><span class="line">    lea dx,message6                  ;未找到</span><br><span class="line">    int 21h                          ;输出no match!</span><br><span class="line">    jmp exit5</span><br><span class="line">next:</span><br><span class="line">    lea dx,message5          ;输出查询结果</span><br><span class="line">    mov ah,09h</span><br><span class="line">    int 21h</span><br><span class="line">    mov ax,num               ;num,数据元素个数</span><br><span class="line">    sub ax,cx                ;num - cx</span><br><span class="line">    mov bx,35                ;乘数35，是每个数据的长度</span><br><span class="line">    mul bx                   ;(num - cx) * 35：地址</span><br><span class="line">    lea dx,tel_tab           ;计算出位置后输出</span><br><span class="line">    add dx,ax</span><br><span class="line">    mov ah,09h</span><br><span class="line">    int 21h</span><br><span class="line">exit5:</span><br><span class="line">    ret</span><br><span class="line">printline endp</span><br><span class="line">;......................................................................................</span><br><span class="line">crlf proc near               ;#### 换行子程序</span><br><span class="line">    mov dl,0ah               ;空格ASCII码</span><br><span class="line">    mov ah,02h</span><br><span class="line">    int 21h</span><br><span class="line">    mov dl,0dh               ;打出一个换行符</span><br><span class="line">    mov ah,02h</span><br><span class="line">    int 21h</span><br><span class="line">    ret</span><br><span class="line">crlf endp</span><br><span class="line">;......................................................................................</span><br><span class="line">clear proc near              ;#### 清空寄存器</span><br><span class="line">    lea di,temp_tab</span><br><span class="line">    xor al,al                ;置零，异或之后全为0</span><br><span class="line">    mov cx,32</span><br><span class="line">    rep stosb</span><br><span class="line">    lea di,temp_nam</span><br><span class="line">    xor al,al</span><br><span class="line">    mov cx,20</span><br><span class="line">    rep stosb</span><br><span class="line">    ret</span><br><span class="line">clear endp</span><br><span class="line">;......................................................................................</span><br><span class="line">prognam ends</span><br><span class="line">    end start</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="question3-统计字符串中不同字符个数"><a href="#question3-统计字符串中不同字符个数" class="headerlink" title="question3: 统计字符串中不同字符个数"></a>question3: 统计字符串中不同字符个数</h3><h4 id="1-设计说明：-2"><a href="#1-设计说明：-2" class="headerlink" title="1.设计说明："></a>1.设计说明：</h4><h6 id="寄存器使用说明：-1"><a href="#寄存器使用说明：-1" class="headerlink" title="寄存器使用说明："></a>寄存器使用说明：</h6><ul><li>cl：存储line长度</li><li>al：line[si]</li></ul><h6 id="子程序说明：-1"><a href="#子程序说明：-1" class="headerlink" title="子程序说明："></a>子程序说明：</h6><p>decimal：控制输出数字，进行进制转换</p><p>break：输出部分</p><p>exit：退出程序</p><h6 id="程序流程说明：-1"><a href="#程序流程说明：-1" class="headerlink" title="程序流程说明："></a>程序流程说明：</h6><ul><li>输入字符串到line</li><li>如果字符串长度为零就退出，否则进行统计</li><li>将line进行遍历统计<ul><li>先判定是否小于0，小于0则是其他字符</li><li>再判定是否大于9，大于9则进入letter_or_other,小于9就数字++</li><li>进入letter_or_other就将字母转为大写，判定字符是否大于’A’，小于’Z’，是则letter++，否则other++</li></ul></li><li>输出答案，跳转输入line</li></ul><h4 id="2-调试说明：-2"><a href="#2-调试说明：-2" class="headerlink" title="2.调试说明："></a>2.调试说明：</h4><p><img src="/image/imagehb4.png" alt="alt text"></p><p>​编程中判定是数字还是其他字符时，没有考虑到ascii码可能小于’0’，因此开始调试时所得出的结果与字符实际数量不一致，后来修改了判定程序，加入判定字符是否小于’0’，得到了正确的结果。</p><h4 id="3-程序框图：-2"><a href="#3-程序框图：-2" class="headerlink" title="3.程序框图："></a>3.程序框图：</h4><p><img src="/image/imagehb5.png" alt="alt text"></p><h4 id="4-程序清单：-2"><a href="#4-程序清单：-2" class="headerlink" title="4.程序清单："></a>4.程序清单：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">datas segment</span><br><span class="line"> </span><br><span class="line">     line_max_length    db 0ffh</span><br><span class="line">     line               db  0, 100h  dup(?);后面那个100h存放具体的字符串</span><br><span class="line"> </span><br><span class="line"> letter_count       dw  0; letter 的数量</span><br><span class="line"> digit_count        dw  0; 数字数量</span><br><span class="line"> other_count        dw  0; 其它字符数量</span><br><span class="line"> </span><br><span class="line"> input                     db &#x27;input a line:$&#x27;</span><br><span class="line"> output_letter_count       db 0dh,0ah,&#x27;letter count:$&#x27;</span><br><span class="line"> output_digit_count        db 0dh,0ah,&#x27;digit count:$&#x27;</span><br><span class="line"> output_other_count        db 0dh,0ah,&#x27;other count:$&#x27;</span><br><span class="line">datas ends</span><br><span class="line">stacks segment stack</span><br><span class="line">    db  100h dup(?)            ;定义栈</span><br><span class="line">stacks ends</span><br><span class="line">codes segment</span><br><span class="line">assume cs:codes,ds:datas,ss:stacks</span><br><span class="line">main   proc  far</span><br><span class="line">;.....................................................................................</span><br><span class="line">start: </span><br><span class="line">       push ds                      ;输入及统计准备</span><br><span class="line">   mov ax,0h                    ;将ax置零</span><br><span class="line">   push ax</span><br><span class="line">       mov ax,datas                 ;初始化ds</span><br><span class="line">   mov ds,ax</span><br><span class="line">       </span><br><span class="line">       lea dx,input                 ;输入一行字符提示</span><br><span class="line">   mov ah,09h</span><br><span class="line">   int 21h</span><br><span class="line">                            </span><br><span class="line">   lea dx,line_max_length        ;输入一行字符</span><br><span class="line">   mov ah,10                     ;键盘缓冲输入</span><br><span class="line">   int 21h </span><br><span class="line">   </span><br><span class="line">;****对输入的一行字符进行统计</span><br><span class="line">   mov cl,line       ;其中line存的是字符串长度</span><br><span class="line">   xor ch,ch         ;置零</span><br><span class="line">   mov si,1</span><br><span class="line">   cmp cx,0          ;判断字符串的长度是否为0</span><br><span class="line">   jz exit          ;若为0，跳转</span><br><span class="line">;.......................................................................................</span><br><span class="line"> s:                       ;#### 循环部分</span><br><span class="line">       mov al,line[si]</span><br><span class="line">   cmp al,&#x27;0&#x27;             ;判断字符是否小于&#x27;0&#x27;</span><br><span class="line">   jb other               ;若小于&#x27;0&#x27;，则字符为其他字符</span><br><span class="line">   cmp al,&#x27;9&#x27;             ;判断字符是否大于&#x27;9&#x27;</span><br><span class="line">   ja letter_or_other     ;若大于&#x27;9&#x27;,则字符为字母或其他字符</span><br><span class="line">   inc digit_count        ;否则，字符为数字字符，数字记录器加1</span><br><span class="line">   jmp next               ;跳转</span><br><span class="line"> letter_or_other:</span><br><span class="line">    and al,11011111b          ;将字符转为大写字符</span><br><span class="line">cmp al,&#x27;A&#x27;                ;判断字符是否大于&#x27;A&#x27;</span><br><span class="line">jb other                  ;若小于，则字符是其他字符，跳转</span><br><span class="line">cmp al,&#x27;Z&#x27;                ;判断字符是否大于&#x27;Z&#x27;</span><br><span class="line">ja other                  ;若大于，则字符为其他字符，跳转</span><br><span class="line">inc letter_count          ;否则，字符为字母字符，字母记录器加1</span><br><span class="line">jmp next</span><br><span class="line"> other:</span><br><span class="line">   inc other_count         ;字符为其他字符，其他记录器加1 </span><br><span class="line"> next:</span><br><span class="line">   inc si</span><br><span class="line">   loop s</span><br><span class="line">;........................................................................................     </span><br><span class="line">    break: ;#### 输出部分</span><br><span class="line">        ;输出记录器的值</span><br><span class="line">lea dx,output_letter_count           ;输出字符串，letter_count</span><br><span class="line">mov ah,09h</span><br><span class="line">int 21h</span><br><span class="line">mov ax,letter_count                  ;输出具体letter数量</span><br><span class="line">call decimal</span><br><span class="line"></span><br><span class="line">lea dx,output_digit_count            ;输出字符串，digit_count</span><br><span class="line">mov ah,09h</span><br><span class="line">int 21h</span><br><span class="line">mov ax,digit_count                   ;输出具体digit数量</span><br><span class="line">call decimal</span><br><span class="line"></span><br><span class="line">lea dx,output_other_count            ;输出其他字符，other_count</span><br><span class="line">mov ah,09h</span><br><span class="line">int 21h</span><br><span class="line">mov ax,other_count                   ;输出具体other数量</span><br><span class="line">call decimal</span><br><span class="line">call crlf</span><br><span class="line">jmp main</span><br><span class="line">       ret</span><br><span class="line">main endp</span><br><span class="line">;........................................................................................</span><br><span class="line">exit:   mov ax,4c00h            ;退出程序</span><br><span class="line">    int 21h</span><br><span class="line"></span><br><span class="line">;.........................................................................................</span><br><span class="line">crlf proc near               ;#### 换行子程序</span><br><span class="line">    mov dl,0ah               ;空格ASCII码</span><br><span class="line">    mov ah,02h</span><br><span class="line">    int 21h</span><br><span class="line">    mov dl,0dh               ;打出一个换行符</span><br><span class="line">    mov ah,02h</span><br><span class="line">    int 21h</span><br><span class="line">    ret</span><br><span class="line">crlf endp</span><br><span class="line">;........................................................................................</span><br><span class="line">decimal proc near               ;#### 控制输出数字的子程序</span><br><span class="line"> </span><br><span class="line">        push ax                 ;入栈</span><br><span class="line">push cx </span><br><span class="line">push dx</span><br><span class="line">push bx </span><br><span class="line"></span><br><span class="line">;cmp ax,0                ;ax存具体数值</span><br><span class="line">;jge not_negative         ;没有符号就跳转</span><br><span class="line">;mov bx,ax               </span><br><span class="line">;mov dl,&#x27;-&#x27;              ;有负数就加&#x27;-&#x27;</span><br><span class="line">;mov ah,02h              ;输出&#x27;-&#x27;号</span><br><span class="line">;int 21h </span><br><span class="line">;neg bx                  ;对具体数据求补</span><br><span class="line">;mov ax,bx </span><br><span class="line"></span><br><span class="line">not_negative:</span><br><span class="line">   mov cx,0</span><br><span class="line">   mov bx,10 </span><br><span class="line">  de:</span><br><span class="line">   xor dx,dx                 ;置零 </span><br><span class="line">   div bx                    ;每次除10，16-&gt;10进制数</span><br><span class="line">   push dx  ;除后余数在dx里，入栈</span><br><span class="line">   inc cx                    ;计数器++,为接下来输出做准备</span><br><span class="line">   cmp ax,0                  ;ax！= 0,继续除</span><br><span class="line">   jnz de   </span><br><span class="line">  de1:</span><br><span class="line">   pop dx                     ;弹出dx中的余数(即十进制数每个数位上的数字)</span><br><span class="line">   add dl,30h                 ;转ASCII码</span><br><span class="line">   mov ah,02h                 ;调用字符功能输出</span><br><span class="line">   int 21h</span><br><span class="line">   loop de1 </span><br><span class="line">   </span><br><span class="line">  pop bx                      ;出栈</span><br><span class="line">  pop dx </span><br><span class="line">  pop cx </span><br><span class="line">  pop ax </span><br><span class="line">  </span><br><span class="line">  ret </span><br><span class="line">  </span><br><span class="line">decimal endp</span><br><span class="line">codes ends</span><br><span class="line"> </span><br><span class="line">end main</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="question4-求出第n项斐波那契数"><a href="#question4-求出第n项斐波那契数" class="headerlink" title="question4: 求出第n项斐波那契数"></a>question4: 求出第n项斐波那契数</h3><h4 id="1-设计说明：-3"><a href="#1-设计说明：-3" class="headerlink" title="1.设计说明："></a>1.设计说明：</h4><h6 id="寄存器使用说明：-2"><a href="#寄存器使用说明：-2" class="headerlink" title="寄存器使用说明："></a>寄存器使用说明：</h6><p>cx：存储项数N</p><p>dx：具体要输出的数字</p><h6 id="子程序说明：-2"><a href="#子程序说明：-2" class="headerlink" title="子程序说明："></a>子程序说明：</h6><p>INPUT：输入要计算斐波那契数列的项数</p><p>IN_END：结束调用</p><p>OUTPUT：将栈中的数字转化为十进制输出</p><h6 id="程序流程说明：-2"><a href="#程序流程说明：-2" class="headerlink" title="程序流程说明："></a>程序流程说明：</h6><ul><li><p>输入项数，存至CX</p></li><li><p>判定CX，小于1进行结束判定，大于1存入N</p></li><li><p>将1放到输出区，输出后N–</p></li><li><p>进入标号S，计算F1+F2，将F2，F1+F2做为新的F1，F2。N&#x3D;N-1；</p></li><li><p>判定N是否等于0：</p><ul><li>不等继续循环</li><li>等于则输出</li></ul></li><li><p>输出后判定是否结束程序：</p><ul><li>Y程序结束</li><li>N则继续输入N</li></ul></li></ul><h4 id="2-调试说明：-3"><a href="#2-调试说明：-3" class="headerlink" title="2.调试说明："></a>2.调试说明：</h4><p><img src="/image/imagehb6.png" alt="alt text"></p><p>编程时碰到的困难主要是两个问题：</p><ol><li>F1和F2进行迭代时，之前F2要变成F1，开始直接用mov，产生报错，后来通过先将F2 mov至BX寄存器，再将寄存器mov到F1的方法实现了F2替换原来的F1的过程。</li><li>计算出斐波那契数后，如何转化为十进制输出。由于斐波那契数的数值较大，不能通过简单的+30h来转变为ASCII码值，通过C语言编程的启发，我们可以每次对数值除10，得到的余数即此数位上的数字，此时讲数字+30h后输出即可。为了方便控制，可以先将每位上可以输出的数值push入栈中保存，等AX&#x3D;&#x3D;0时再依次pop输出。</li></ol><h4 id="3-程序框图：-3"><a href="#3-程序框图：-3" class="headerlink" title="3.程序框图："></a>3.程序框图：</h4><p><img src="/image/imagehb7.png" alt="alt text"></p><h4 id="4-程序清单：-3"><a href="#4-程序清单：-3" class="headerlink" title="4.程序清单："></a>4.程序清单：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line">ASSUME CS:CODE,DS:DATA,SS:STACK</span><br><span class="line">DATA SEGMENT</span><br><span class="line">MSG1 DB 13,10,&#x27;Please input the num of Fibonacci(N&lt;256), N =  $&#x27;</span><br><span class="line">MSG2 DB 13,10,&#x27;Fibonacci Sequence is: $&#x27;    ;提示信息</span><br><span class="line">MSG3 DB 13,10,&#x27;exit?(Y/N)&#x27;,&#x27;$&#x27;</span><br><span class="line"> N DW 0  </span><br><span class="line"> F1  DW 0  </span><br><span class="line"> F2  DW 1            ;计算数列的两个加数F[0],F[1]</span><br><span class="line">DATA ENDS</span><br><span class="line">STACK SEGMENT</span><br><span class="line">dw  100h dup(?)</span><br><span class="line">STACK ENDS</span><br><span class="line">;..............................................................................</span><br><span class="line">CODE SEGMENT</span><br><span class="line">START:</span><br><span class="line"> MOV AX,DATA</span><br><span class="line"> MOV DS,AX           ;导入数据</span><br><span class="line"> LEA DX,MSG1         ;输出输入提示</span><br><span class="line"> MOV AH,9</span><br><span class="line"> INT 21H             ;打印提示信息1</span><br><span class="line"> CALL INPUT          ;调用INPUT模块， 得到项数 存到 CX中</span><br><span class="line"> CMP CX,1            ;如果CX &lt; 1 输入不合法</span><br><span class="line"> JB EXIT             ;不合法就直接退出   </span><br><span class="line"> MOV N,CX            ;令N = CX  即 N为数列项数</span><br><span class="line"></span><br><span class="line"> LEA DX,MSG2         ;打印输出信息 ‘Fibonacci Sequence is:’</span><br><span class="line"> MOV AH,9            ;调用的是9号方法 .09H号调用，字符串输出显示</span><br><span class="line"> INT 21H</span><br><span class="line">;...............................................................................</span><br><span class="line">first:                      ; #### 处理首项</span><br><span class="line">MOV DL,&#x27;1&#x27;                ; 先把 1 放到输出区</span><br><span class="line"> MOV AH,2                  ; 输出 1</span><br><span class="line"> INT 21H</span><br><span class="line"> MOV DL,&#x27; &#x27;</span><br><span class="line"> INT 21H                   ; 输出 空格</span><br><span class="line"> DEC N                     ; N = N - 1; </span><br><span class="line"> JZ exit                   ; 当 N = 0时，退出</span><br><span class="line">;................................................................................</span><br><span class="line">S:              ;#### 循环部分</span><br><span class="line"> MOV AX,F1   ;把 AX = F1</span><br><span class="line"> ADD AX,F2   ;AX =+ F2</span><br><span class="line"> JC EXIT     ;AX发生进位 即 AX不能表示数字</span><br><span class="line"> MOV BX,F2  </span><br><span class="line"> MOV F1,BX   ;不能 直接MOV F1,F2 </span><br><span class="line"> MOV F2,AX   ;把 F2 赋值给 F1 , AX （计算出来的一项） 赋值给 F2 </span><br><span class="line"> CALL OUTPUT ;调用输出模块 输出计算的项</span><br><span class="line"> MOV DL,&#x27; &#x27;  </span><br><span class="line"> MOV AH,2</span><br><span class="line"> INT 21H     ;输出空格</span><br><span class="line"> DEC N       ; N = N - 1</span><br><span class="line"> JNZ S       ;跳转到循环LOOP JNZ是由标志位ZF  而ZF是算术运算可以改变的，</span><br><span class="line">                ;这里可能使ZF发生改变的是上一个指令    DEC N  ， 当N ！= 0 条件成立</span><br><span class="line">EXIT:</span><br><span class="line"> ;退出程序</span><br><span class="line">lea dx,MSG3 ;退出提示</span><br><span class="line">mov ah,09h</span><br><span class="line">int 21h</span><br><span class="line">mov ah,07h</span><br><span class="line">int 21h</span><br><span class="line"></span><br><span class="line">call crlf         ;换行</span><br><span class="line">mov ah,0</span><br><span class="line">cmp ax,&#x27;N&#x27;</span><br><span class="line">jz exit_real</span><br><span class="line">jmp start</span><br><span class="line"></span><br><span class="line">exit_real:</span><br><span class="line">MOV AH,4CH</span><br><span class="line"> INT 21H  </span><br><span class="line">;..........................................................................................</span><br><span class="line">crlf proc near               ;#### 换行子程序</span><br><span class="line">    mov dl,0ah               ;空格ASCII码</span><br><span class="line">    mov ah,02h</span><br><span class="line">    int 21h</span><br><span class="line">    mov dl,0dh               ;打出一个换行符</span><br><span class="line">    mov ah,02h</span><br><span class="line">    int 21h</span><br><span class="line">    ret</span><br><span class="line">crlf endp  </span><br><span class="line"></span><br><span class="line">;.................................................................................</span><br><span class="line">INPUT:                     ;#### 输入项数N</span><br><span class="line"> MOV BL,10                 ;  BL 为 10</span><br><span class="line"> MOV CX,0                  ;  CX 为 0</span><br><span class="line"></span><br><span class="line">IN_X:                      ;#### 输入数字  </span><br><span class="line"> MOV AH,07h</span><br><span class="line"> INT 21H                   ; 读取数据 </span><br><span class="line"> CMP AL,13                 ; 读取的字符是 回车 </span><br><span class="line"> JE IN_END                 ; 跳转到输入结束模块  </span><br><span class="line"> CMP AL,&#x27;0&#x27;                ; 输入不合法 就继续输入</span><br><span class="line"> JB IN_X</span><br><span class="line"> CMP AL,&#x27;9&#x27;  ; 输入不合法 就继续输入</span><br><span class="line"> JA IN_X  </span><br><span class="line"> MOV DL,AL   ; 把合法数字 存入到DL  </span><br><span class="line"> MOV AH,2    ; 调用2号功能 输出刚才输入的字符</span><br><span class="line"> INT 21H</span><br><span class="line"> MOV AL,DL   </span><br><span class="line"> SUB AL,30H  ; 把assic码变成数字</span><br><span class="line"> MOV AH,0    ; AH 为 0                       </span><br><span class="line"> XCHG AX,CX               ; 把cx变成刚输入的数字</span><br><span class="line"> MUL BL                   ; AX = AL * BL(10) 就是乘相应的权 百位乘100  十位乘10 </span><br><span class="line"> ADD CX,AX                ; CX += AX; cx表示的就是真正输入的斐波那契项数</span><br><span class="line"> </span><br><span class="line"> ;这里设置项数的最大值 项数最大为256 如果输入大于256 就直接结束</span><br><span class="line"> CMP CH,0                 ;判断CX的前8位是不是为0， 如果不为0， 说明大于256 </span><br><span class="line"> JNZ IN_END               ;大于256 直接结束输入</span><br><span class="line"> JMP IN_X                 ;否则继续输入</span><br><span class="line">;..................................................................................</span><br><span class="line">IN_END:</span><br><span class="line"> RET   ;结束调用</span><br><span class="line">OUTPUT:</span><br><span class="line"> MOV BX,10   ;BX 初始化为 10</span><br><span class="line"> MOV CX,0   ;CX 初始为 0</span><br><span class="line">;会接着运行下面的代码 </span><br><span class="line">;下面的代码用于把数字转换成字符串</span><br><span class="line">;方法是每次把数除10 得到余数 压入栈中在，直到被除数为0， 然后依次输出栈顶字符       </span><br><span class="line"></span><br><span class="line">LOOP1:</span><br><span class="line">MOV DX,0  ;  DX = 0</span><br><span class="line"> DIV BX       ; AX为被除数 AX =  AX / 10;  余数放在DX里 ，这就是最低位的数字</span><br><span class="line"> ADD DL,&#x27;0&#x27;   ; 把DL 加上 &#x27;0&#x27;  此时 DL是能直接输出的字符数字</span><br><span class="line"> PUSH DX      ; 把DX 压入栈</span><br><span class="line"> INC CX       ; CX ++</span><br><span class="line"> CMP AX,0     </span><br><span class="line"> JNZ LOOP1      ; 如果AX 不为 0, 就继续LOOP1</span><br><span class="line"> MOV AH,2</span><br><span class="line">LOOP2:POP DX       ;循环输出栈的字符</span><br><span class="line"> INT 21H</span><br><span class="line"> LOOP LOOP2</span><br><span class="line"> RET            ;结束调用</span><br><span class="line">;</span><br><span class="line">CODE ENDS</span><br><span class="line"> END START</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="总结与思考"><a href="#总结与思考" class="headerlink" title="总结与思考"></a>总结与思考</h3><p>​由于自己回家后有一段时间没有复习汇编语言，开始时对于本次实验的问题是一头雾水，之后便开始进行复习和实践，最终完善了我的汇编笔记，同时写了许多实践方面的经验。从编写一些简单的输入输出程序开始，我慢慢将之前课程上学到的内容运用到实际编程上，各种指令，以及设计程序的方法，慢慢由陌生到熟练。老师检查完成后，我也发现了我的程序只能执行一次的问题，因此接下来我又加入了一些循环执行程序和程序按输入退出的程序。</p><p>​总的来说，后面我还会尝试更多更复杂的问题，本次实验我收获良多！</p>]]></content>
      
      
      <categories>
          
          <category> CS技术相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>致刀剑归鞘者</title>
      <link href="/2024/06/10/%E8%87%B4%E5%88%80%E5%89%91%E5%BD%92%E9%9E%98%E8%80%85/"/>
      <url>/2024/06/10/%E8%87%B4%E5%88%80%E5%89%91%E5%BD%92%E9%9E%98%E8%80%85/</url>
      
        <content type="html"><![CDATA[<p>首先恭喜大家，高考结束了，高中时代结束了。</p><p>这是一个阶段的结束，也是一个新的开始。有些人也许计划去旅行，也许计划去网吧通宵，也许计划大醉一场，也许也会突然失去目标而变得迷茫。这似乎是一生中最放松也最应该放松的时候。</p><p>放松当然没错，但作为一个即将毕业的大学生，我首先建议各位思考一下：我们接下来面对的大学，其意义是什么？</p><p>有些人只要求一纸学历，日后能够毕业即可；有些人想大学继续努力，卷绩点卷竞赛卷科研卷实习；有些人想大学做些自己喜欢的事情，可以多旅行多尝试新鲜事物；也有人可能只想躺平，每天宅着于游戏外卖为伴。</p><p>这些选择当然都没错，但大家要想好：大学里，自己对自己负责，辅导员只负责安全，老师只负责讲课。我们的目光可以适当长远一些，我们在大学的选择，在未来就是各自要走的路。大家想走什么路？</p><p>ps：高中毕业的假期是提前了解大学生活的机会</p><p>很多人都会提起一个词——“卷”，我建议的卷和很多人的卷不一样，我们不要无意义的卷，而是要去实实在在的努力进步。当你发现做一件事已经对你的能力提升没有帮助，单纯是为了在某项竞争中脱颖而出时，那就是无意义的卷。至于日常努力学习，努力收集资料信息，努力利用大学的平台，这些都是有意义的。大学里有些时候是被迫卷，但如果自己有选择的话，我们还是尽量不要做无意义的卷。</p><p>同样，大学里，也是各位第一次离开学校和家长的重重保护，进入一个小社会，请大家做好心理准备：在大学里你可能是一个人离家千里独自生活，可能会遇见各种奇葩的舍友，各种离谱的故事，可能发现有些老师上课根本学不到东西，会慢慢体会到社会的全貌，会慢慢发现自己需要花时间精力的远远不止学习，还有社交，信息收集，各种琐事。所以，时间合理分配和效率提升是大学的必修课，很多时候我们不是不想改变现状，而是没有时间精力去改变现状。</p><p>最后，我想聊一些诗意的部分，很多人上大学上着上着就变得心中无路，眼里无光，有时是因为日复一日的沉浸在繁忙中，有时是因为一次又一次现实的打击，有时是因为人生岔路口处的迷茫，但我想，这时我们更应该思考自己为什么而来到大学，究竟想做些什么，想成什么样的人。确定好目标，那就放手去做吧！管他前路究竟如何，管他彼岸是不是锦绣山河，管他路上多少艰难坎坷，只管去攀一座山，看一场雪，追一个梦……</p><p>愿大家永远少年。</p>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DFSS:Distributed-File-Sync-System</title>
      <link href="/2024/06/06/DFSS/"/>
      <url>/2024/06/06/DFSS/</url>
      
        <content type="html"><![CDATA[<p>本项目为解决跨服务器文件同步的问题而开发，主要功能为：</p><ul><li>使用P2P架构实现文件共享与同步</li><li>使用Raft算法实现文件同步的一致性</li><li>使用imgui和glfw实现图像化界面</li><li>使用定时器实现定时同步</li><li>使用HTTP协议，WinSocket进行文件传输</li></ul><h2 id="项目设计"><a href="#项目设计" class="headerlink" title="项目设计"></a>项目设计</h2><p>系统本身使用p2p架构，每个节点都维护一个文件存储空间，同时存储了本节点已知的其他节点和数据源。用户可通过可视化界面对系统进行操作，主要功能有：</p><ul><li>添加数据源</li><li>添加节点</li><li>设置本节点文件存储路径</li><li>展示当前节点信息</li><li>设定同步实践</li><li>手动同步</li><li>退出</li></ul><h2 id="项目实现"><a href="#项目实现" class="headerlink" title="项目实现"></a>项目实现</h2><h3 id="实现数据同步时出现的问题"><a href="#实现数据同步时出现的问题" class="headerlink" title="实现数据同步时出现的问题"></a>实现数据同步时出现的问题</h3><h3 id="实现文件传输时出现的问题"><a href="#实现文件传输时出现的问题" class="headerlink" title="实现文件传输时出现的问题"></a>实现文件传输时出现的问题</h3><h3 id="增加线程池来完成文件同步的问题"><a href="#增加线程池来完成文件同步的问题" class="headerlink" title="增加线程池来完成文件同步的问题"></a>增加线程池来完成文件同步的问题</h3><h3 id="加入imgui后编译产生的问题"><a href="#加入imgui后编译产生的问题" class="headerlink" title="加入imgui后编译产生的问题"></a>加入imgui后编译产生的问题</h3><h2 id="项目展示"><a href="#项目展示" class="headerlink" title="项目展示"></a>项目展示</h2><p>系统图形化界面</p><p><img src="/image/imag.png" alt="alt text"></p><p>添加节点：</p><ul><li>输入IP和端口号</li><li>点击添加</li></ul><p><img src="/image/imag-1.png" alt="alt text"></p><p>添加数据源</p><ul><li>输入数据源文件名</li><li>输入数据源路径</li><li>输入哈希值</li><li>点击添加</li></ul><p><img src="/image/imag-2.png" alt="alt text"></p><p>设定同步时间</p><ul><li>有实时同步，按分钟同步等多种选择</li></ul><p><img src="/image/imag-3.png" alt="alt text"></p><p>点击查看当前节点信息</p><p><img src="/image/image-4.png" alt="alt text"></p><p>设置本节点文件存储路径</p><p><img src="/image/image-5.png" alt="alt text"></p><p>测试文件夹结构</p><p><img src="/image/image-6.png" alt="alt text"></p><p>待同步文件</p><p><img src="/image/image-7.png" alt="alt text"></p><p>同步文件结果</p><p><img src="/image/image-8.png" alt="alt text"></p><p>ps：视频音频图片等文件也可以进行传输和同步，在进行文件传输时，对于文本文件会添加HTTP相应头，如果是非结构化的文件则不添加</p><p>代码结构：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line">├── .vscode/</span><br><span class="line">│   └── c_cpp_properties.json</span><br><span class="line">│   └── launch.json</span><br><span class="line">│   └── settings.json</span><br><span class="line">│   └── tasks.json</span><br><span class="line">├── build/</span><br><span class="line">│   ├── .cmake/</span><br><span class="line">│   │   ├── api/</span><br><span class="line">│   │   │   ├── v1/</span><br><span class="line">│   │   │   │   ├── query/</span><br><span class="line">│   │   │   │   │   ├── client-vscode/</span><br><span class="line">│   │   │   │   │   │   └── query.json</span><br><span class="line">│   │   │   │   ├── reply/</span><br><span class="line">│   │   │   │   │   └── cache-v2-f584b58ee08efc8eb378.json</span><br><span class="line">│   │   │   │   │   └── cmakeFiles-v1-6743e5907639a18ed5a2.json</span><br><span class="line">│   │   │   │   │   └── codemodel-v2-8e6c1f3b241872cf0c1b.json</span><br><span class="line">│   │   │   │   │   └── directory-.-Debug-d0094a50bb2071803777.json</span><br><span class="line">│   │   │   │   │   └── index-2024-06-06T07-11-04-0993.json</span><br><span class="line">│   │   │   │   │   └── target-DFSS-Debug-040f6c24d5939000d56b.json</span><br><span class="line">│   │   │   │   │   └── toolchains-v1-3a5489f92a382d3236cf.json</span><br><span class="line">│   └── CMakeCache.txt</span><br><span class="line">│   ├── CMakeFiles/</span><br><span class="line">│   │   ├── 3.25.1-msvc1/</span><br><span class="line">│   │   │   └── CMakeCCompiler.cmake</span><br><span class="line">│   │   │   └── CMakeCXXCompiler.cmake</span><br><span class="line">│   │   │   └── CMakeDetermineCompilerABI_C.bin    </span><br><span class="line">│   │   │   └── CMakeDetermineCompilerABI_CXX.bin  </span><br><span class="line">│   │   │   └── CMakeRCCompiler.cmake</span><br><span class="line">│   │   │   └── CMakeSystem.cmake</span><br><span class="line">│   │   │   ├── CompilerIdC/</span><br><span class="line">│   │   │   │   └── a.exe</span><br><span class="line">│   │   │   │   └── CMakeCCompilerId.c</span><br><span class="line">│   │   │   │   ├── tmp/</span><br><span class="line">│   │   │   ├── CompilerIdCXX/</span><br><span class="line">│   │   │   │   └── a.exe</span><br><span class="line">│   │   │   │   └── CMakeCXXCompilerId.cpp</span><br><span class="line">│   │   │   │   ├── tmp/</span><br><span class="line">│   │   └── cmake.check_cache</span><br><span class="line">│   │   └── CMakeDirectoryInformation.cmake        </span><br><span class="line">│   │   └── CMakeOutput.log</span><br><span class="line">│   │   ├── DFSS.dir/</span><br><span class="line">│   │   │   └── build.make</span><br><span class="line">│   │   │   └── cmake_clean.cmake</span><br><span class="line">│   │   │   └── compiler_depend.make</span><br><span class="line">│   │   │   └── compiler_depend.ts</span><br><span class="line">│   │   │   └── depend.make</span><br><span class="line">│   │   │   └── DependInfo.cmake</span><br><span class="line">│   │   │   └── flags.make</span><br><span class="line">│   │   │   └── includes_CXX.rsp</span><br><span class="line">│   │   │   └── link.txt</span><br><span class="line">│   │   │   └── linkLibs.rsp</span><br><span class="line">│   │   │   └── objects.a</span><br><span class="line">│   │   │   └── objects1</span><br><span class="line">│   │   │   └── progress.make</span><br><span class="line">│   │   │   ├── src/</span><br><span class="line">│   │   │   │   └── imgui.cpp.obj</span><br><span class="line">│   │   │   │   └── imgui.cpp.obj.d</span><br><span class="line">│   │   │   │   └── imgui_demo.cpp.obj</span><br><span class="line">│   │   │   │   └── imgui_demo.cpp.obj.d</span><br><span class="line">│   │   │   │   └── imgui_draw.cpp.obj</span><br><span class="line">│   │   │   │   └── imgui_draw.cpp.obj.d</span><br><span class="line">│   │   │   │   └── imgui_impl_glfw.cpp.obj        </span><br><span class="line">│   │   │   │   └── imgui_impl_glfw.cpp.obj.d      </span><br><span class="line">│   │   │   │   └── imgui_impl_opengl3.cpp.obj     </span><br><span class="line">│   │   │   │   └── imgui_impl_opengl3.cpp.obj.d   </span><br><span class="line">│   │   │   │   └── imgui_tables.cpp.obj</span><br><span class="line">│   │   │   │   └── imgui_tables.cpp.obj.d</span><br><span class="line">│   │   │   │   └── imgui_widgets.cpp.obj</span><br><span class="line">│   │   │   │   └── imgui_widgets.cpp.obj.d        </span><br><span class="line">│   │   │   │   └── main.cpp.obj</span><br><span class="line">│   │   │   │   └── main.cpp.obj.d</span><br><span class="line">│   │   │   │   └── Peer.cpp.obj</span><br><span class="line">│   │   │   │   └── Peer.cpp.obj.d</span><br><span class="line">│   │   │   │   └── threadPool.cpp.obj</span><br><span class="line">│   │   │   │   └── threadPool.cpp.obj.d</span><br><span class="line">│   │   └── Makefile.cmake</span><br><span class="line">│   │   └── Makefile2</span><br><span class="line">│   │   ├── pkgRedirects/</span><br><span class="line">│   │   └── progress.marks</span><br><span class="line">│   │   └── TargetDirectories.txt</span><br><span class="line">│   └── cmake_install.cmake</span><br><span class="line">│   └── compile_commands.json</span><br><span class="line">│   └── DFSS.exe</span><br><span class="line">│   └── imgui.ini</span><br><span class="line">│   └── Makefile</span><br><span class="line">└── CMakeLists.txt</span><br><span class="line">├── file/</span><br><span class="line">│   ├── test_down_file/</span><br><span class="line">│   │   └── test.cpp</span><br><span class="line">│   │   └── test.mkv</span><br><span class="line">│   │   └── test.png</span><br><span class="line">│   │   └── test.txt</span><br><span class="line">│   ├── test_source_file/</span><br><span class="line">│   │   └── test.cpp</span><br><span class="line">│   │   └── test.exe</span><br><span class="line">│   │   └── test.mkv</span><br><span class="line">│   │   └── test.png</span><br><span class="line">│   │   └── test.txt</span><br><span class="line">└── imgui.ini</span><br><span class="line">├── lib/</span><br><span class="line">│   └── DataSource.h</span><br><span class="line">│   ├── glfw/</span><br><span class="line">│   │   ├── include/</span><br><span class="line">│   │   │   ├── GLFW/</span><br><span class="line">│   │   │   │   └── glfw3.h</span><br><span class="line">│   │   │   │   └── glfw3native.h</span><br><span class="line">│   │   ├── lib/</span><br><span class="line">│   │   │   └── glfw3.dll</span><br><span class="line">│   │   │   └── libglfw3.a</span><br><span class="line">│   │   │   └── libglfw3dll.a</span><br><span class="line">│   │   │   └── opengl32.dll</span><br><span class="line">│   └── imconfig.h</span><br><span class="line">│   └── imgui.h</span><br><span class="line">│   └── imgui_impl_glfw.h</span><br><span class="line">│   └── imgui_impl_opengl3.h</span><br><span class="line">│   └── imgui_impl_opengl3_loader.h</span><br><span class="line">│   └── imgui_internal.h</span><br><span class="line">│   └── imstb_rectpack.h</span><br><span class="line">│   └── imstb_textedit.h</span><br><span class="line">│   └── imstb_truetype.h</span><br><span class="line">│   └── Peer.h</span><br><span class="line">│   └── threadPool.h</span><br><span class="line">│   └── timer.h</span><br><span class="line">└── README.md</span><br><span class="line">├── src/</span><br><span class="line">│   └── imgui.cpp</span><br><span class="line">│   └── imgui_demo.cpp</span><br><span class="line">│   └── imgui_draw.cpp</span><br><span class="line">│   └── imgui_impl_glfw.cpp</span><br><span class="line">│   └── imgui_impl_opengl3.cpp</span><br><span class="line">│   └── imgui_tables.cpp</span><br><span class="line">│   └── imgui_widgets.cpp</span><br><span class="line">│   └── main.cpp</span><br><span class="line">│   └── Peer.cpp</span><br><span class="line">└─  └── threadPool.cpp</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CS技术相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>E-detect:Multimodal-assisted-monitoring-system-for-the-elderly</title>
      <link href="/2024/06/05/E-detect/"/>
      <url>/2024/06/05/E-detect/</url>
      
        <content type="html"><![CDATA[<p>本项目开始于2023年四月，我们打算通过现有技术来实现对失能或半失能老人的辅助监护。系统主要由使用python搭建的多模态监护器和使用java，html，js，CSS，MySQL搭建的前后端管理系统组成。</p><p>主要框架和技术：pytorch，tensorflow，spring-boot，Mybatis-plus，js，CSS，HTML，MySQL，Jquery，Bootstrap，ajax</p><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>根据中国国家统计局政府信息公开显示，截止至2022年末,全国60岁以上老龄人口为28004万人，占总人口数的19.8%，如图1所示。由此可见，中国的老龄化问题十分严峻。而与之相反的是，我国目前仅有养老服务机构和设施35.7万个，养老服务床位813.5万张，仅按照国家标准养老护理员与老年人的比例为1∶4计算，至少需要养老护理员200余万名。然而，我国目前养老护理员仅有32.2万名，缺口达到近170万。 </p><p>系统适用场景：</p><ul><li>敬老院的走廊，老人起居室，公共活动场所等</li><li>护理机构的走廊，公共活动场所等</li><li>医院康复中心的走廊，病房等</li><li>失能或半失能老人活动的社区活动场所等</li></ul><p>产品用户：</p><ul><li>有失能或半失能老人的敬老院，护理机构，医院康复中心</li><li>家中有失能，半失能老人的家庭</li><li>有监护需要的社区，活动场所等</li></ul><p>现有产品大致有以下几种：</p><ul><li>穿戴式设备，报警手环等</li><li>雷达设备，通过雷达来检测跌倒等</li><li>按钮控制的报警系统等</li></ul><p>然而现有设备存在以下痛点：<br>-部分产品无法自动报警，需要依靠老人主动触发报警，存在安全隐患：如果老人由于身体原因，摔倒或突发心脏病后身体无法移动或意识丧失时无法接触到报警按钮，可能会导致老人无法得到及时救助。<br>-检测手段单一，只能单一检测声音或老人动作：单一的异常表情识别或者异常动作识别只能通过摄像头的录像来检测异常情况，而实际运用过程中老人发生异常情况可能单一的异常检测难以准确识别，如出现摄像头死角等情况，此时以往的监护系统可能无法保证老人的安全。<br>-基于雷达进行识别的辅助监护系统无法对老人的呼救声做出判断，且受限于安装雷达的位置，环境等因素影响，系统的识别效果难以保证。<br>-经实地考察能够发现，目前大部分养老机构对雷达装置的普及率远远差于摄像头等设备。很多客户都需要额外安装设备，因此基于雷达设备的辅助监护系统推广起来更加困难。</p><p>产品思路：<br>-经过调研，得出使用场景参数和用户需求细节。<br>-建立一个针对失能与半失能老人的多模态辅助监护系统。<br>-硬件方面配置录音设备和摄像头，以及配套计算机，服务器，GPU等，软件方面开发线上平台模块，检测模块，报警模块等。<br>-核心技术是通过结合Alphapose技术，kws识别技术，表情识别技术等，实现可用的异常检测方法。</p><h2 id="系统设计"><a href="#系统设计" class="headerlink" title="系统设计"></a>系统设计</h2><p>本团队成功实现并整合了三项技术，分别涉及人体异常动作识别、异常表情识别及异常环境检测系统。其中，人体异常动作识别利用了最新的AlphaPose模型，有效捕捉并分析人体非正常动态；异常表情识别系统则基于深入的表情特征学习算法，旨在及时发现异常人脸表情；而异常环境检测系统依托ECAPA-TDNN模型，可精准探测环境中潜在的不安全因素。</p><p>项目主要采用了卷积神经网络（XCEPTION）来搭建识别系统，经过训练得到了人脸识别及表情识别模型，具有较好的表情识别效果。最终，表情识别系统可以实现三种不同的识别模式，分别为单独表情识别，表情与性别识别和人脸特征梯度化。</p><p>当前模型的训练主要基于一些公开的数据集进行，且主要训练数据多为中青年表情，对于老年人的表情数据训练较少，可能不能很好的识别老年人表情。之后，团队将会通过虚幻引擎生成老人表情数据，加强模型对老年人数据集的生成和训练，增强其对老年人表情的识别。</p><p>异常动作识别是系统的第二大模块，我们采用了AlphaPose人体姿态提取模型来检测人体动作，通过将人体的头，左右耳，手臂关节，腿部关节以及手，脚等作为人体姿态特征点，通过这些特征点的定位和连线来确定人体姿态。</p><p>除了姿态提取模型外，我们还训练了动作预测模型，动作追踪模型等来辅助检测，使得系统能够精确识别预测出老年人跌倒等异常动作。为了保证识别精度，我们对单个人体识别时都添加了两个人体姿态检测框，在人体姿态检测框的基础上训练了老年人跌倒检测等异常姿态检测模型。当两个检测框都显示老人跌倒，则向用户发出警报。</p><p><img src="/image/image.png" alt="alt text"></p><p>前端面向用户，由用户进行操作，实现对后端数据和检测器的控制，后端数据存储在数据库中，检测器模块通过读取数据库数据设定检测器参数进行检测，之后检测器将检测结果写入数据库，后端再将异常记录进行读取传回前端，前端由单位时间内异常记录的数目来决定是否报警。</p><center><p><img src="/image/image-1.png" alt="alt text"></p></center><h2 id="系统实现-出现问题和解决过程"><a href="#系统实现-出现问题和解决过程" class="headerlink" title="系统实现(出现问题和解决过程)"></a>系统实现(出现问题和解决过程)</h2><h4 id="实现三种主要的检测技术产生的问题"><a href="#实现三种主要的检测技术产生的问题" class="headerlink" title="实现三种主要的检测技术产生的问题"></a>实现三种主要的检测技术产生的问题</h4><p>项目开始初期，需要将三种检测技术成功实现。由于表情识别和动作检测都是较为成熟的领域，我们使用Xception和AlphaPose等现有框架来解决这两大技术问题，而音频异常检测目前研究较少，开始时打算引入异常检测原理，即检测正常情况，而其他情况都作为异常情况进行报警，但实际测试中发现效果并不理想，因此最终改用了声音分类来对异常音进行检测，我们将声音分成哭喊声，玻璃破碎声等进行识别分类，最终通过网络收集到的数据集进行训练，取得了不错的效果。</p><h4 id="结合两种视觉检测方法产生问题"><a href="#结合两种视觉检测方法产生问题" class="headerlink" title="结合两种视觉检测方法产生问题"></a>结合两种视觉检测方法产生问题</h4><p>由于两种视觉检测方法都需要视频流数据，而直接通过cv2读取摄像头只能供一个检测器进行使用，而我们有两个(表情识别检测器和异常动作检测器)。后来我们通过cv2读取摄像头后，将读取的图像流同步传输到另一个检测器解决了这个问题。而在检测结束时，由于模型会对图像进行标注操作并通过imshow()函数显示，因此我们后面又将同步传输的图像流替换成原有视频流，完成图像标注，最终能够正常完成视频检测器的运行，检测和显示结果。</p><h4 id="创建多线程检测器产生问题"><a href="#创建多线程检测器产生问题" class="headerlink" title="创建多线程检测器产生问题"></a>创建多线程检测器产生问题</h4><p>由于实际监护场景中需要监护多个区域(病房，走廊等)，因此系统需要同时运行多个检测器。开始时我对于多线程编程仅有理论知识，但没有实践经验，通过学习理解了python通过threading模块来创建线程的方法后，我尝试通过多线程来创建多个检测器，但是由于python的GIL(全局解释器锁)的存在，性能上较为受限，因此我后期使用python的多进程库(multi-proccessing)来实现检测器并行化工作，大大提升了检测效率。</p><h4 id="构建前后端管理系统产生的问题"><a href="#构建前后端管理系统产生的问题" class="headerlink" title="构建前后端管理系统产生的问题"></a>构建前后端管理系统产生的问题</h4><h2 id="结果展示"><a href="#结果展示" class="headerlink" title="结果展示"></a>结果展示</h2><center><p><img src="/image/image-2.png" alt="alt text"></p></center><p><img src="/image/image-3.png" alt="alt text"></p><p><img src="/image/8c2d16121d941e14e000106b0c8b050.png" alt="alt text"></p><p><img src="/image/3cb98e15b13560624d785ed71d1a3c3.png" alt="alt text"></p>]]></content>
      
      
      <categories>
          
          <category> CS技术相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/06/05/hello-world/"/>
      <url>/2024/06/05/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to My blog! </p><h2 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h2><p>中南大学计科大三在读<br>来自某个偏远小城的做题家<br>什么都喜欢学一点<br>但好像什么都不太精通<br>电影爱好者，经常喜欢画水彩，偶尔打羽毛球</p><h2 id="感兴趣的方向"><a href="#感兴趣的方向" class="headerlink" title="感兴趣的方向"></a>感兴趣的方向</h2><ul><li>深度学习</li><li>计算机视觉</li><li>自然语言处理</li><li>大模型</li><li>网络安全</li></ul><h2 id="Skills"><a href="#Skills" class="headerlink" title="Skills"></a>Skills</h2><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><ul><li>numpy</li><li>scikit-learn</li><li>pytorch  </li><li>cv2</li><li>matplotlib&#x2F;seaborn</li></ul><h3 id="C-C"><a href="#C-C" class="headerlink" title="C&#x2F;C++"></a>C&#x2F;C++</h3><ul><li>c++17</li><li>cmake</li><li>imgui</li><li>opengl</li><li>threadPool</li></ul><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><ul><li>spring-boot</li><li>mybatis-plus</li></ul><h3 id="frontEnd"><a href="#frontEnd" class="headerlink" title="frontEnd"></a>frontEnd</h3><ul><li>js, css, html</li><li>vue</li><li>bootstrap</li><li>jquery</li><li>ajax</li></ul><h3 id="else"><a href="#else" class="headerlink" title="else"></a>else</h3><ul><li>MySQL</li><li>git</li><li>linux</li><li>vscode</li><li>ssh</li><li>matlib</li><li>origin</li><li>visio</li></ul><p>联系方式：<a href="mailto:&#x38;&#x32;&#x31;&#x30;&#50;&#49;&#49;&#x37;&#x30;&#x31;&#64;&#99;&#115;&#117;&#x2e;&#x65;&#x64;&#x75;&#46;&#x63;&#110;">&#x38;&#x32;&#x31;&#x30;&#50;&#49;&#49;&#x37;&#x30;&#x31;&#64;&#99;&#115;&#117;&#x2e;&#x65;&#x64;&#x75;&#46;&#x63;&#110;</a></p><!-- This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).## Quick Start### Create a new post<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a> –&gt;</p>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> about </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
